- name: Deploy webapp using autoscaling group
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    lcname: webapp-lc

  tasks:
  - name: Get vpc facts
    ec2_vpc_subnet_facts:
      region: ap-south-1
      filters:
        vpc-id: vpc-960b04fe
    register: vpc_facts

  - elb_target_group:
      name: webapp-tg
      protocol: http
      port: 8080
      region: ap-south-1
      vpc_id: vpc-960b04fe
      health_check_path: /
      successful_response_codes: "200,250-260"
      state: present

  - name: Create the ALB
    elb_application_lb:
      region: ap-south-1
      name: webapp-alb
      security_groups:
        - webapp
      subnets:
        - "{{ vpc_facts.subnets[1].id }}"
        - "{{ vpc_facts.subnets[2].id }}"
      listeners:
        - Protocol: HTTPS
          Port: 443
          SslPolicy: ELBSecurityPolicy-2015-05
          Certificates:
            - CertificateArn: "arn:aws:acm:ap-south-1:794652573366:certificate/5264db9f-3879-4a3f-bf49-e605230b1016"
          DefaultActions:
          - Type: forward # Required.
            TargetGroupName: webapp-tg
      state: present
    register: alb_facts

  - name: create launch config
    ec2_lc:
      name: "{{ lcname }}"
      image_id: "{{ ec2ami }}"
      key_name: ishwar
      region: ap-south-1
      security_groups: webapp
      instance_type: t2.micro
      assign_public_ip: yes

  - name: Change autoscaling group 
    ec2_asg:
      name: webapp-asg
      load_balancers: webapp-alb
      launch_config_name: "{{ lcname }}"
      replace_all_instances: yes
      min_size: 3
      max_size: 3
      desired_capacity: 3
      region: ap-south-1
      wait_for_instances: yes
      vpc_zone_identifier: "subnet-ef774387" 
